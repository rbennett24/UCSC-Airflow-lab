############################
# measure_nasalance_traces.Praat
# Ryan Bennett, April 2023
# https://people.ucsc.edu/~rbennett/
# https://github.com/rbennett24/UCSC-Airflow-lab
############################

##########
# Praat script to:
# - Extract nasalance values and airflow values from (normalized) nasalance and airflow .Intensity files (generated by the R script airflow_audio_processing.R) during individual segments marked on a corresponding TextGrid
# - Save nasalance values as time-normalized traces and as non-normalized traces for further analysis in R.
# - Save oral/nasal airflow intensity values from .Intensity files (first produced by the Praat script save_airflow_inputs.Praat).


##########
# Notes:
# - Assumes all filenames begin with a <Spk##_> tag indicating speaker number (e.g. Spk04_wordlist_bicycle.wav). If there's no
# leading zero (e.g. Spk4...), that's fine, as long as the code is Spk#_ in form.
# - Also assumes that word-level annotations are on the tier *above* the segment tier.


################
form Analyze nasalance .Intensity files and corresponding TextGrids.
	comment Where are the input (normalized) nasalance .Intensity files?
		sentence nasFiles C:\Users\Tiamat\Dropbox\Research\Latinamerica_Misc\A7ingae\2023_field_trip\Saved_files\Forced_alignment\Handcorrected_data\Files_for_analysis\Extracted_files\Nasalance_files\

	comment Where are the original (normalized) oral + nasal airflow .Intensity files that nasalance was derived from?
		sentence airflowFiles C:\Users\Tiamat\Dropbox\Research\Latinamerica_Misc\A7ingae\2023_field_trip\Saved_files\Forced_alignment\Handcorrected_data\Files_for_analysis\Extracted_files\Normalized_airflow\
	
	comment Which channel of the original (normalized) oral + nasal airflow .Intensity files is the ORAL channel?
		integer oralChan 1
	
	comment Where are the corresponding TextGrids?
		sentence tgFiles C:\Users\Tiamat\Dropbox\Research\Latinamerica_Misc\A7ingae\2023_field_trip\Saved_files\Forced_alignment\Handcorrected_data\Files_for_analysis\Extracted_files\

	comment What tier are the target segments on?

		integer seg_tier 2
	
	comment Where do you want to save the output text files?
		sentence outDir C:\Users\Tiamat\Dropbox\Research\Latinamerica_Misc\A7ingae\2023_field_trip\Saved_files\Forced_alignment\Handcorrected_data\Files_for_analysis\Extracted_files\
	
	comment For time-normalized measurements: how many measurements per segment?
		integer normSlices 17

	comment Ignore TN codes when printing segmental context?
		boolean noTN 1
		
	comment Include a date stamp on the output filename?
		boolean Datestamp 1
endform

#########
# If the output folder doesn't exist, create it.
folder$ = "'outDir$'\Measures\"
createDirectory: folder$


#########
# Datestamp output .txt files if you like
if datestamp = 1
	date$ = date$ ()
	mon$ = mid$ (date$, 5, 3)
	day$ = mid$ (date$, 9, 2)
	
	outputname_norm$ = "'folder$'\nasalance_measures_timenorm_'mon$''day$'.txt"
	outputname_frames$ =  "'folder$'\nasalance_measures_frames_'mon$''day$'.txt"
else
	outputname_norm$ = "'folder$'\nasalance_measures_timenorm.txt"
	outputname_frames$ =  "'folder$'\nasalance_measures_frames.txt"
endif


#########
#  Delete any pre-existing versions of the text outputs.
deleteFile (outputname_norm$)
deleteFile (outputname_frames$)


#########
# Append headers of column names to the output files
# http://www.fon.hum.uva.nl/praat/manual/Scripting_3_7__Layout.html
nas_norm_header$ = "segment'tab$'word'tab$'segnum'tab$'
...token.code'tab$'dur'tab$'
...step'tab$'stepSize'tab$'step.start.time'tab$'step.end.time'tab$'
...nasalance.atstep'tab$'oralAirflow.atstep'tab$'nasalAirflow.atstep'tab$'
...mean.nasalance.seg'tab$'median.nasalance.seg'tab$'
...max.nasalance.seg'tab$'max.nasalance.time.seg'tab$'
...min.nasalance.seg'tab$'min.nasalance.time.seg'tab$'
...mean.oralAirflow.seg'tab$'median.oralAirflow.seg'tab$'
...max.oralAirflow.seg'tab$'max.oralAirflow.time.seg'tab$'
...mean.nasalAirflow.seg'tab$'median.nasalAirflow.seg'tab$'
...max.nasalAirflow.seg'tab$'max.nasalAirflow.time.seg'tab$'
...prec.seg'tab$'next.seg'tab$'prec.seg.wd'tab$'next.seg.wd'tab$'speaker"
appendFileLine: outputname_norm$, nas_norm_header$


nas_frames_header$ = "segment'tab$'word'tab$'segnum'tab$'
...token.code'tab$'dur'tab$'
...frame.number'tab$'frame.time'tab$'
...nasalance.atframe'tab$'oralAirflow.atframe'tab$'nasalAirflow.atframe'tab$'
...mean.nasalance.seg'tab$'median.nasalance.seg'tab$'
...max.nasalance.seg'tab$'max.nasalance.time.seg'tab$'
...min.nasalance.seg'tab$'min.nasalance.time.seg'tab$'
...mean.oralAirflow.seg'tab$'median.oralAirflow.seg'tab$'
...max.oralAirflow.seg'tab$'max.oralAirflow.time.seg'tab$'
...mean.nasalAirflow.seg'tab$'median.nasalAirflow.seg'tab$'
...max.nasalAirflow.seg'tab$'max.nasalAirflow.time.seg'tab$'
...prec.seg'tab$'next.seg'tab$'prec.seg.wd'tab$'next.seg.wd'tab$'speaker"
appendFileLine: outputname_frames$, nas_frames_header$


#########
# Get the number of *.Intensity files in the input folder
Create Strings as file list... filesNas 'nasFiles$'*.Intensity
numfile = Get number of strings


#########
# Iterate through the .Intensity files in the input directories.
counter = 1
for k from 1 to numfile
	
	# Get speaker code for each processed file.
	# This assumes that the name of the TextGrid begins
	# with a three-symbol code that corresponds to the
	# speaker code, e.g S04_wordlist_bicycle_1_nasalance.Intensity
	select Strings filesNas
	fstr$ = Get string... 'k'
	spkcodeTMP$ = left$(fstr$, 5)
	# For short codes (with one digit number) get rid of trailing _
	spkcode$ = replace$(spkcodeTMP$, "_", "", 0)


	#########
	# Read in all files for analysis

	# Read in the nasalance file.
	nasalance = Read from file: "'nasFiles$''fstr$'"
	
	# Get filename stem
	filestem$ = replace$("'fstr$'", "_nasalance.Intensity", "", 0)
	
	# Read in corresponding TextGrid file (and convert to unicode)
	tgname$ = "'filestem$'.TextGrid"
	tg = Read from file: "'tgFiles$''tgname$'"
	Convert to Unicode
	
	# Read in corresponding oral airflow file.
	oralname$ = "'filestem$'_ch'oralChan'_normalized.Intensity"
	oralInt = Read from file: "'airflowFiles$''oralname$'"
	
	# Read in corresponding nasal airflow file.
	if oralChan = 1
		nasalChan = 2
	else
		nasalcChan = 1
	endif
	nasalname$ = "'filestem$'_ch'nasalChan'_normalized.Intensity"
	nasalInt = Read from file: "'airflowFiles$''nasalname$'"	
	
	

	#########
	# Iterate through intervals, and find the labels you care about.
	
	# Get the number of intervals on the relevant tier
	select tg
	numint = Get number of intervals... 'seg_tier'
	
	segcounter = 0
	# Iterate through intervals of the current TextGrid
	for i from 1 to 'numint'
			
		# Just to be safe, reselect the current TextGrid object.
		select tg

		# Get label of the interval you're working with.
		interval$ = Get label of interval... 'seg_tier' 'i'
		
		# Clean punctuation out.
		interval$ = replace$(interval$,".","",0)
		interval$ = replace$(interval$,"!","",0)
		interval$ = replace$(interval$,"?","",0)

		#########
		# Place conditions on labels.
		# Here: we just ignore empty labels.
		if (interval$ <> "" and interval$ <> " "  and interval$ <> "'tab$'" and interval$ <> "sil" and interval$ <> "sp")
		
			segcounter = segcounter + 1

			#########
			# Get timecodes for beginning and end of the interval.
			start = Get starting point... 'seg_tier' 'i'
			end = Get end point... 'seg_tier' 'i'

			
			#########
			# Get overall duration of interval, and figure out the durations
			# of the sub-intervals that you're going to analyze.
			int_duration = end - start
			int_duration_out = int_duration*1000
			sample_step = int_duration / normSlices

			
			#########
			# Get the word label (label on the tier immediately above the target tier).
			int_mdpt = start + (end-start)/2
			intWd = Get interval at time... seg_tier-1 int_mdpt
			wdlab$ = Get label of interval... seg_tier-1 intWd
			wdStart = Get starting point... seg_tier-1 intWd
			wdEnd = Get end point... seg_tier-1 intWd

			# Clean punctuation out
			wdlab$ = replace$(wdlab$,".","",0)
			wdlab$ = replace$(wdlab$,"!","",0)
			wdlab$ = replace$(wdlab$,"?","",0)
			
			#########
			# Set the token code you use to keep track of items being measured.
			tokenCode$ = "'filestem$'-'intWd'-'i'"

			
			######
			# Get the labels of segments flanking the segment being measured.
			if i = 1
				precSeg$ = "NA"
			else
				preci = i-1
				precSeg$ = Get label of interval... 'seg_tier' 'preci'

				# Skip intervals labeled TN.
				if (noTN = 1 and left$(precSeg$, 2) = "TN")
					preci = i-2
					if preci < 1
						precSeg$ = "NA"
					else
						precSeg$ = Get label of interval... 'seg_tier' 'preci'
					endif
				endif

				if (precSeg$ = "sil" or precSeg$ = "sp" or precSeg$ = "" or precSeg$ = " " or precSeg$ = "'tab$'")
					precSeg$ = "NA"
				endif
			endif

			if i = numint
				nextSeg$ = "NA"
			else
				nexti = i+1
				nextSeg$ = Get label of interval... 'seg_tier' 'nexti'

				# Skip intervals labeled TN.
				if (noTN = 1 and left$(nextSeg$, 2) = "TN")
					nexti = i+2
					if nexti > numint
						nextSeg$ = "NA"
					else
						nextSeg$ = Get label of interval... 'seg_tier' 'nexti'
					endif
					
				endif

				if (nextSeg$ = "sil" or nextSeg$ = "sp" or nextSeg$ = "" or nextSeg$ = " "  or nextSeg$ = "'tab$'")
					nextSeg$ = "NA"
				endif
			endif


			#########
			# Get the labels of segments flanking the segment being measured,
			# only if those segments are in the same word.
			if i = 1
				precSegWD$ = "NA"
			else
				preci = i-1

				precSegWD$ = Get label of interval... 'seg_tier' 'preci'
				if (noTN = 1 and left$(precSegWD$, 2) = "TN")
					preci = i-2
					if preci < 1
						precSegWD$ = "NA"
					endif
				endif

				if preci >= 1
					startPrec = Get starting point... 'seg_tier' 'preci'
					endPrec = Get end point... 'seg_tier' 'preci'

					if ((startPrec >= wdStart) and (endPrec <= wdEnd))
						precSegWD$ = Get label of interval... 'seg_tier' 'preci'
					else
						precSegWD$ = "NA"
					endif
				
					if (precSegWD$ = "sil" or precSegWD$ = "sp" or precSegWD$ = "" or precSegWD$ = " " or precSegWD$ = "'tab$'")
						precSegWD$ = "NA"
					endif
				endif

			endif

			if i = numint
				nextSegWD$ = "NA"
			else
				nexti = i+1
				nextSegWD$ = Get label of interval... 'seg_tier' 'nexti'
				if (noTN = 1 and left$(nextSegWD$, 2) = "TN")
					nexti = i+2
					if nexti > numint
						nextSegWD$ = "NA"
					endif
				endif

				if nexti <= numint
					startNext = Get starting point... 'seg_tier' 'nexti'
					endNext = Get end point... 'seg_tier' 'nexti'

					if ((startNext >= wdStart) and (endNext <= wdEnd))
						nextSegWD$ = Get label of interval... 'seg_tier' 'nexti'
					else
						nextSegWD$ = "NA"
					endif

					if (nextSegWD$ = "sil" or nextSegWD$ = "sp" or nextSegWD$ = "" or nextSegWD$ = " " or nextSegWD$ = "'tab$'")
						nextSegWD$ = "NA"
					endif
				endif
			endif		
		
		
			#########
			# Get measurements taken over the entire segment interval.
			
			# Nasalance
			select nasalance
			nasalanceMin = Get minimum: 'start', 'end', "parabolic"
			nasalanceMinTimeRaw = Get time of minimum: 'start', 'end', "parabolic"
			nasalanceMinTime = nasalanceMinTimeRaw - start
			nasalanceMax = Get maximum: 'start', 'end', "parabolic"
			nasalanceMaxTimeRaw = Get time of maximum: 'start', 'end', "parabolic"
			nasalanceMaxTime = nasalanceMaxTimeRaw - start

			nasalanceMean = Get mean: 'start', 'end', "energy"
			nasalanceMedian = Get quantile: 0, 0, 0.5

			# Oral airflow
			select oralInt
			# oralMin = Get minimum: 'start', 'end', "parabolic"
			# oralMinTimeRaw = Get time of minimum: 'start', 'end', "parabolic"
			# oralMinTime = oralMinTimeRaw - start
			oralMax = Get maximum: 'start', 'end', "parabolic"
			oralMaxTime = Get time of maximum: 'start', 'end', "parabolic"
			oralMaxTimeRaw = Get time of maximum: 'start', 'end', "parabolic"
			oralMaxTime = oralMaxTimeRaw - start

			oralMean = Get mean: 'start', 'end', "energy"
			oralMedian = Get quantile: 0, 0, 0.5

			# Nasal airflow
			select nasalInt
			# nasalMin = Get minimum: 'start', 'end', "parabolic"
			# nasalMinTimeRaw = Get time of minimum: 'start', 'end', "parabolic"
			# nasalMinTime = nasalMinTimeRaw - start
			nasalMax = Get maximum: 'start', 'end', "parabolic"
			nasalMaxTimeRaw = Get time of maximum: 'start', 'end', "parabolic"
			nasalMaxTime = nasalMaxTimeRaw - start

			nasalMean = Get mean: 'start', 'end', "energy"
			nasalMedian = Get quantile: 0, 0, 0.5


			#########
			# Get measurements taken over individual frames (not time-normalized),
			# and write results.

	
			#########
			# Find numbers of first and last frames in the window
			# Use floor() and ceiling() rather than round() to control
			# rounding up vs. down.
			# This is a little bit conservative here because it's guaranteed not
			# to select any frames outside of the interval, but as a result
			# may lose frames at the edges of the interval.
			startframeRough = Get frame from time... 'start'
			startFrame = ceiling(startframeRough)
			if startFrame <= 0
				startFrame = 1
			endif
			endframeRough = Get frame from time... 'end'
			endFrame = floor(endframeRough)
			nframes = Get number of frames
			if endFrame > nframes
				endFrame = nframes
			endif
			
			for f from startFrame to endFrame
			
				select nasalance
				nasalanceFrame = Get value in frame: 'f'
				select oralInt
				oralFrame = Get value in frame: 'f'
				select nasalInt
				nasalFrame = Get value in frame: 'f'
				
				# Get the relative number/time of the frame within the segment itself.
				framenum = (f - startFrame) + 1
 				frametimeRaw = Get time from frame number: 'f'
				frametime = frametimeRaw - start
 			
				# Write values.
				nas_frame_measures_raw$ = "'interval$''tab$''wdlab$''tab$''segcounter''tab$'
				...'tokenCode$''tab$''int_duration_out:2''tab$'
				... 'framenum''tab$''frametime''tab$'
				... 'nasalanceFrame''tab$''oralFrame''tab$''nasalFrame''tab$'
				... 'nasalanceMean''tab$''nasalanceMedian''tab$'
				... 'nasalanceMax''tab$''nasalanceMaxTime''tab$'
				... 'nasalanceMin''tab$''nasalanceMinTime''tab$'
				... 'oralMean''tab$''oralMedian''tab$'
				... 'oralMax''tab$''oralMaxTime''tab$'
				... 'nasalMean''tab$''nasalMedian''tab$'
				... 'nasalMax''tab$''nasalMaxTime''tab$'
				... 'precSeg$''tab$''nextSeg$''tab$''precSegWD$''tab$''nextSegWD$''tab$''spkcode$'"

				# Clean up undefined values.
				nas_frame_measures$ = replace$ ("'nas_frame_measures_raw$'", "--undefined--", "NA", 0)

				appendFileLine: outputname_frames$, nas_frame_measures$

			endfor


			#########
			# Get measurements taken over time-normalized steps, and write results.

			# Save min/max times as raw times, normalized times, or both? Normalized value is reconstructable from (min/max time-start time)/duration * 100. But both?
			
			for step_num from 0 to (normSlices-1)
		
				# Get start and end time of the sample window.
				sample_start = start+(sample_step * step_num)
				sample_end = start+(sample_step * (step_num+1))
				step_count = step_num+1
				
				# Get means over the sample window.
				select nasalance
				nasalanceStepMean = Get mean: 'sample_start', 'sample_end', "energy"
				select oralInt
				oralStepMean = Get mean: 'sample_start', 'sample_end', "energy"
				select nasalInt
				nasalStepMean = Get mean: 'sample_start', 'sample_end', "energy"

				# Rectify some output timestamp values.
				sample_start_out = sample_start-start
				sample_end_out = sample_end-start

				# Write values.
				nas_norm_measures_raw$ = "'interval$''tab$''wdlab$''tab$''segcounter''tab$'
				...'tokenCode$''tab$''int_duration_out:2''tab$'
				...'step_count''tab$'
				...'sample_step''tab$''sample_start_out''tab$''sample_end_out''tab$'
				...'nasalanceStepMean''tab$''oralStepMean''tab$''nasalStepMean''tab$'
				...'nasalanceMean''tab$''nasalanceMedian''tab$'
				...'nasalanceMax''tab$''nasalanceMaxTime''tab$'
				...'nasalanceMin''tab$''nasalanceMinTime''tab$'
				...'oralMean''tab$''oralMedian''tab$'
				...'oralMax''tab$''oralMaxTime''tab$'
				...'nasalMean''tab$''nasalMedian''tab$'
				...'nasalMax''tab$''nasalMaxTime''tab$'
				...'precSeg$''tab$''nextSeg$''tab$''precSegWD$''tab$''nextSegWD$''tab$''spkcode$'"

				# Clean up undefined values.
				nas_norm_measures$ = replace$ ("'nas_norm_measures_raw$'", "--undefined--", "NA", 0)

				appendFileLine: outputname_norm$, nas_norm_measures$

			# Stop iterating over time-normalized steps.
			endfor			

		
		# Stop processing the interval.
		endif

	# Stop looping through intervals of this TextGrid.
	endfor

	#########
	# Clean up
	select nasalance
	plus tg
	plus oralInt
	plus nasalInt
	Remove

# Stop looping through files.
endfor


#########
# Clean up
select Strings filesNas
Remove